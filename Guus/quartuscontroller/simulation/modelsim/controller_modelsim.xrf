vendor_name = ModelSim
source_file = 1, C:/Users/guusb/Documents/GitHub/utMOD5-projectProcessor/Guus/quartuscontroller/controller.vhd
source_file = 1, c:/intelfpga_lite/18.1/quartus/libraries/vhdl/ieee/prmtvs_b.vhd
source_file = 1, c:/intelfpga_lite/18.1/quartus/libraries/vhdl/ieee/prmtvs_p.vhd
source_file = 1, c:/intelfpga_lite/18.1/quartus/libraries/vhdl/ieee/timing_b.vhd
source_file = 1, c:/intelfpga_lite/18.1/quartus/libraries/vhdl/ieee/timing_p.vhd
source_file = 1, C:/Users/guusb/Documents/GitHub/utMOD5-projectProcessor/Guus/quartuscontroller/db/controller.cbx.xml
design_name = controller
instance = comp, \ALU[0]~output\, ALU[0]~output, controller, 1
instance = comp, \ALU[1]~output\, ALU[1]~output, controller, 1
instance = comp, \ALU[2]~output\, ALU[2]~output, controller, 1
instance = comp, \MEM[0]~output\, MEM[0]~output, controller, 1
instance = comp, \MEM[1]~output\, MEM[1]~output, controller, 1
instance = comp, \MEM[2]~output\, MEM[2]~output, controller, 1
instance = comp, \rs[0]~output\, rs[0]~output, controller, 1
instance = comp, \rs[1]~output\, rs[1]~output, controller, 1
instance = comp, \rs[2]~output\, rs[2]~output, controller, 1
instance = comp, \rs[3]~output\, rs[3]~output, controller, 1
instance = comp, \rd[0]~output\, rd[0]~output, controller, 1
instance = comp, \rd[1]~output\, rd[1]~output, controller, 1
instance = comp, \rd[2]~output\, rd[2]~output, controller, 1
instance = comp, \rd[3]~output\, rd[3]~output, controller, 1
instance = comp, \SIMM10[0]~output\, SIMM10[0]~output, controller, 1
instance = comp, \SIMM10[1]~output\, SIMM10[1]~output, controller, 1
instance = comp, \SIMM10[2]~output\, SIMM10[2]~output, controller, 1
instance = comp, \SIMM10[3]~output\, SIMM10[3]~output, controller, 1
instance = comp, \SIMM10[4]~output\, SIMM10[4]~output, controller, 1
instance = comp, \SIMM10[5]~output\, SIMM10[5]~output, controller, 1
instance = comp, \SIMM10[6]~output\, SIMM10[6]~output, controller, 1
instance = comp, \SIMM10[7]~output\, SIMM10[7]~output, controller, 1
instance = comp, \SIMM10[8]~output\, SIMM10[8]~output, controller, 1
instance = comp, \SIMM10[9]~output\, SIMM10[9]~output, controller, 1
instance = comp, \IO[0]~output\, IO[0]~output, controller, 1
instance = comp, \IO[1]~output\, IO[1]~output, controller, 1
instance = comp, \rr~output\, rr~output, controller, 1
instance = comp, \Amux~output\, Amux~output, controller, 1
instance = comp, \Cmux~output\, Cmux~output, controller, 1
instance = comp, \clk~input\, clk~input, controller, 1
instance = comp, \clk~inputCLKENA0\, clk~inputCLKENA0, controller, 1
instance = comp, \MemString[17]~input\, MemString[17]~input, controller, 1
instance = comp, \NewInstruction~input\, NewInstruction~input, controller, 1
instance = comp, \MemString[16]~input\, MemString[16]~input, controller, 1
instance = comp, \MemString[15]~input\, MemString[15]~input, controller, 1
instance = comp, \ALU~0\, ALU~0, controller, 1
instance = comp, \MemString[19]~input\, MemString[19]~input, controller, 1
instance = comp, \MemString[18]~input\, MemString[18]~input, controller, 1
instance = comp, \Equal2~0\, Equal2~0, controller, 1
instance = comp, \ALU~2\, ALU~2, controller, 1
instance = comp, \cntstop~0\, cntstop~0, controller, 1
instance = comp, \reset~input\, reset~input, controller, 1
instance = comp, \DEBUG_NEXT~input\, DEBUG_NEXT~input, controller, 1
instance = comp, \DEBUG~input\, DEBUG~input, controller, 1
instance = comp, \ACK_data~input\, ACK_data~input, controller, 1
instance = comp, \IO~2\, IO~2, controller, 1
instance = comp, \halt~0\, halt~0, controller, 1
instance = comp, \decode~0\, decode~0, controller, 1
instance = comp, \halt~1\, halt~1, controller, 1
instance = comp, \decode~1\, decode~1, controller, 1
instance = comp, \decode:cntstop\, \decode:cntstop, controller, 1
instance = comp, \ALU[0]~1\, ALU[0]~1, controller, 1
instance = comp, \ALU[0]~3\, ALU[0]~3, controller, 1
instance = comp, \ALU[0]~reg0\, ALU[0]~reg0, controller, 1
instance = comp, \ALU~4\, ALU~4, controller, 1
instance = comp, \ALU[1]~reg0\, ALU[1]~reg0, controller, 1
instance = comp, \ALU~5\, ALU~5, controller, 1
instance = comp, \ALU[2]~reg0\, ALU[2]~reg0, controller, 1
instance = comp, \Cmux~0\, Cmux~0, controller, 1
instance = comp, \Cmux~reg0\, Cmux~reg0, controller, 1
instance = comp, \Amux~0\, Amux~0, controller, 1
instance = comp, \rd[0]~0\, rd[0]~0, controller, 1
instance = comp, \Amux~reg0\, Amux~reg0, controller, 1
instance = comp, \MEM~0\, MEM~0, controller, 1
instance = comp, \MEM[2]~reg0\, MEM[2]~reg0, controller, 1
instance = comp, \MemString[10]~input\, MemString[10]~input, controller, 1
instance = comp, \MemString[12]~input\, MemString[12]~input, controller, 1
instance = comp, \MemString[3]~input\, MemString[3]~input, controller, 1
instance = comp, \rs~0\, rs~0, controller, 1
instance = comp, \MemString[14]~input\, MemString[14]~input, controller, 1
instance = comp, \rs[0]~1\, rs[0]~1, controller, 1
instance = comp, \rs[0]~2\, rs[0]~2, controller, 1
instance = comp, \rs[0]~reg0\, rs[0]~reg0, controller, 1
instance = comp, \MemString[11]~input\, MemString[11]~input, controller, 1
instance = comp, \MemString[4]~input\, MemString[4]~input, controller, 1
instance = comp, \MemString[13]~input\, MemString[13]~input, controller, 1
instance = comp, \rs~3\, rs~3, controller, 1
instance = comp, \rs[1]~reg0\, rs[1]~reg0, controller, 1
instance = comp, \MemString[5]~input\, MemString[5]~input, controller, 1
instance = comp, \rs~4\, rs~4, controller, 1
instance = comp, \rs[2]~reg0\, rs[2]~reg0, controller, 1
instance = comp, \MemString[6]~input\, MemString[6]~input, controller, 1
instance = comp, \rs~5\, rs~5, controller, 1
instance = comp, \rs[3]~reg0\, rs[3]~reg0, controller, 1
instance = comp, \rd[0]~1\, rd[0]~1, controller, 1
instance = comp, \rd~2\, rd~2, controller, 1
instance = comp, \rd[0]~3\, rd[0]~3, controller, 1
instance = comp, \rd[0]~4\, rd[0]~4, controller, 1
instance = comp, \rd[0]~reg0\, rd[0]~reg0, controller, 1
instance = comp, \MemString[7]~input\, MemString[7]~input, controller, 1
instance = comp, \rd~5\, rd~5, controller, 1
instance = comp, \rd[1]~reg0\, rd[1]~reg0, controller, 1
instance = comp, \MemString[8]~input\, MemString[8]~input, controller, 1
instance = comp, \rd~6\, rd~6, controller, 1
instance = comp, \rd[2]~reg0\, rd[2]~reg0, controller, 1
instance = comp, \MemString[9]~input\, MemString[9]~input, controller, 1
instance = comp, \rd~7\, rd~7, controller, 1
instance = comp, \rd[3]~reg0\, rd[3]~reg0, controller, 1
instance = comp, \MemString[0]~input\, MemString[0]~input, controller, 1
instance = comp, \SIMM10[0]~0\, SIMM10[0]~0, controller, 1
instance = comp, \SIMM10[0]~reg0\, SIMM10[0]~reg0, controller, 1
instance = comp, \MemString[1]~input\, MemString[1]~input, controller, 1
instance = comp, \SIMM10[1]~reg0\, SIMM10[1]~reg0, controller, 1
instance = comp, \MemString[2]~input\, MemString[2]~input, controller, 1
instance = comp, \SIMM10[2]~reg0\, SIMM10[2]~reg0, controller, 1
instance = comp, \SIMM10[3]~reg0\, SIMM10[3]~reg0, controller, 1
instance = comp, \SIMM10[4]~reg0feeder\, SIMM10[4]~reg0feeder, controller, 1
instance = comp, \SIMM10[4]~reg0\, SIMM10[4]~reg0, controller, 1
instance = comp, \SIMM10[5]~reg0feeder\, SIMM10[5]~reg0feeder, controller, 1
instance = comp, \SIMM10[5]~reg0\, SIMM10[5]~reg0, controller, 1
instance = comp, \SIMM10[6]~reg0\, SIMM10[6]~reg0, controller, 1
instance = comp, \SIMM10[7]~reg0feeder\, SIMM10[7]~reg0feeder, controller, 1
instance = comp, \SIMM10[7]~reg0\, SIMM10[7]~reg0, controller, 1
instance = comp, \SIMM10[8]~reg0\, SIMM10[8]~reg0, controller, 1
instance = comp, \SIMM10[9]~reg0feeder\, SIMM10[9]~reg0feeder, controller, 1
instance = comp, \SIMM10[9]~reg0\, SIMM10[9]~reg0, controller, 1
instance = comp, \IO~0\, IO~0, controller, 1
instance = comp, \IO[0]~1\, IO[0]~1, controller, 1
instance = comp, \IO[0]~reg0\, IO[0]~reg0, controller, 1
instance = comp, \IO[1]~reg0\, IO[1]~reg0, controller, 1
instance = comp, \rr~0\, rr~0, controller, 1
instance = comp, \rr~reg0\, rr~reg0, controller, 1
instance = comp, \PSR[0]~input\, PSR[0]~input, controller, 1
instance = comp, \PSR[1]~input\, PSR[1]~input, controller, 1
instance = comp, \PSR[2]~input\, PSR[2]~input, controller, 1
instance = comp, \PSR[3]~input\, PSR[3]~input, controller, 1
instance = comp, \MemString[20]~input\, MemString[20]~input, controller, 1
instance = comp, \MemString[21]~input\, MemString[21]~input, controller, 1
instance = comp, \MemString[22]~input\, MemString[22]~input, controller, 1
instance = comp, \MemString[23]~input\, MemString[23]~input, controller, 1
instance = comp, \MemString[24]~input\, MemString[24]~input, controller, 1
instance = comp, \MemString[25]~input\, MemString[25]~input, controller, 1
instance = comp, \MemString[26]~input\, MemString[26]~input, controller, 1
instance = comp, \MemString[27]~input\, MemString[27]~input, controller, 1
instance = comp, \MemString[28]~input\, MemString[28]~input, controller, 1
instance = comp, \MemString[29]~input\, MemString[29]~input, controller, 1
instance = comp, \MemString[30]~input\, MemString[30]~input, controller, 1
instance = comp, \MemString[31]~input\, MemString[31]~input, controller, 1
instance = comp, \~QUARTUS_CREATED_GND~I\, ~QUARTUS_CREATED_GND~I, controller, 1
